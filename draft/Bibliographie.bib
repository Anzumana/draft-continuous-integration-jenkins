% Encoding: windows-1252

@Misc{jenkins_docs,
  author = {Jenkins},
  title  = {MIT License},
  year   = {2008},
  url    = {https://jenkins.io/doc/},
}

@Article{Waller2015,
  author    = {Jan Waller and Nils C. Ehmke and Wilhelm Hasselbring},
  title     = {Including Performance Benchmarks into Continuous Integration to Enable {DevOps}},
  journal   = {{ACM} {SIGSOFT} Software Engineering Notes},
  year      = {2015},
  volume    = {40},
  number    = {2},
  pages     = {1--4},
  month     = {apr},
  doi       = {10.1145/2735399.2735416},
  file      = {:/Users/anzumana/Dropbox/projects/seminar/p38b-waller.pdf:PDF},
  publisher = {Association for Computing Machinery ({ACM})},
  url       = {http://dx.doi.org/10.1145/2735399.2735416},
}

@Misc{jenkins_blue_ocean,
  author = {Jenkins},
  title  = {https://jenkins.io/projects/blueocean/},
  year   = {2008},
  url    = {https://jenkins.io/projects/blueocean/},
}
@article{van_Genuchten_1991,
	doi = {10.1109/32.87283},
	url = {http://dx.doi.org/10.1109/32.87283},
	year = 1991,
	month = {jun},
	publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
	volume = {17},
	number = {6},
	pages = {582--590},
	author = {M. van Genuchten},
	title = {Why is software late? An empirical study of reasons for delay in software development},
	journal = {{IEEE} Transactions on Software Engineering}
}
@inproceedings{Pyster_1982,
	doi = {10.1145/800174.809766},
	url = {http://dx.doi.org/10.1145/800174.809766},
	year = 1982,
	publisher = {Association for Computing Machinery ({ACM})},
	author = {Arthur Pyster},
	title = {Software development productivity},
	booktitle = {Proceedings of the {ACM} {\textquotesingle}82 conference on   - {ACM} 82}
}

@Article{Blackburn_1996,
  author    = {J.D. Blackburn and G.D. Scudder and L.N. Van Wassenhove},
  title     = {Improving speed and productivity of software development: a global survey of software developers},
  journal   = {{IEEE} Transactions on Software Engineering},
  year      = {1996},
  volume    = {22},
  number    = {12},
  pages     = {875--885},
  abstract  = {Abstract:
Time is an essential measure of performance in software development because time delays tend to fall directly to the bottom line. To address this issue, this research seeks to distinguish time-based software development practices: those managerial actions that result in faster development speed and higher productivity. This study is based upon a survey of software management practices in Western Europe and builds upon an earlier study we carried out in the United States and Japan (Integrated Manufacturing Systems, vol. 7, no. 2, 1996). We measure the extent to which managers in the USA, Japan and Europe differ in their management of software projects and also determine the tools, technology and practices that separate fast and slow developers in Western Europe},
  doi       = {10.1109/32.553636},
  file      = {:/Users/anzumana/sync/books/bib/96-11.pdf:PDF},
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  url       = {http://dx.doi.org/10.1109/32.553636},
}

@Article{Lambert_1984,
  author    = {G. N. Lambert},
  title     = {A comparative study of system response time on program developer productivity},
  journal   = {{IBM} Systems Journal},
  year      = {1984},
  volume    = {23},
  number    = {1},
  pages     = {36--43},
  abstract  = {Abstract:
Skilled programmer time and computer time and resources are valuable. Earlier studies had shown that added computer resources can decrease system response time and increase programmer productivity significantly. A controlled study has been made to determine whether that finding is true for the particular conditions in another program development organization. That study is reported here. Programmer productivity increased sixty-two percent with subsecond system response time. A new finding is that individual group project offices lead to greater efficiency than large open rooms.},
  doi       = {10.1147/sj.231.0036},
  publisher = {{IBM}},
  url       = {http://dx.doi.org/10.1147/sj.231.0036},
}

@InProceedings{Mockus_2009,
  author    = {Audris Mockus},
  title     = {Succession: Measuring transfer of code and developer productivity},
  booktitle = {2009 {IEEE} 31st International Conference on Software Engineering},
  year      = {2009},
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  abstract  = {Abstract:
Code ownership transfer or succession is a crucial ingredient in open source code reuse and in offshoring projects. Measuring succession can help understand factors that affect the success of such transfers and suggest ways to make them more efficient. We propose and evaluate several methods to measure succession based on the chronology and traces of developer activities. Using ten instances of offshoring succession identified through interviews, we find that the best succession measure can accurately pinpoint the most likely mentors. We model the productivity ratio of more than 1000 developer pairs involved in the succession to test conjectures formulated using the organizational socialization theory and find the ratio to decrease for instances of offshoring and for mentors who have worked primarily on a single project or have transferred ownership for their non-primary project code, thus supporting a theory-based conjectures and providing practical suggestions on how to improve succession.},
  doi       = {10.1109/icse.2009.5070509},
  url       = {http://dx.doi.org/10.1109/ICSE.2009.5070509},
}

@InProceedings{Moazeni_2013,
  author    = {Ramin Moazeni and Daniel Link and Barry Boehm},
  title     = {Incremental development productivity decline},
  booktitle = {Proceedings of the 9th International Conference on Predictive Models in Software Engineering - {PROMISE} {\textquotesingle}13},
  year      = {2013},
  publisher = {Association for Computing Machinery ({ACM})},
  abstract  = {Incremental models are now being used by many organizations in order to reduce development risks while trying to deliver the product on time. It has become the most common method of software development with characteristics that influences the productivity of projects.

This paper introduces a phenomenon called Incremental Development Productivity Decline (IDPD) that is presumed to be present in all incremental software projects to some extent.

Different ways of measuring productivity are presented and evaluated in order to come to a definition or set of definitions that is suitable to these kinds of projects.

Based on their coherence and other common characteristics, incrementally developed projects are split into several major categories.

Following this, several major projects are used as case studies in order to find out whether IDPD can be proven to exist.},
  doi       = {10.1145/2499393.2499403},
  url       = {http://dx.doi.org/10.1145/2499393.2499403},
}

@Book{smith1998developing,
  title     = {Developing products in half the time: new rules, new tools},
  publisher = {Van Nostrand Reinhold New York, NY},
  year      = {1998},
  author    = {Smith, Preston G and Reinertsen, Donald G},
  url       = {https://www.amazon.com/Developing-Products-Half-Time-Rules/dp/0471292524},
}

@Comment{jabref-meta: databaseType:bibtex;}
